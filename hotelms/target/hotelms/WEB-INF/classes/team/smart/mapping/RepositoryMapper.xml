<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="team.smart.dao.RepositoryMapper">
	<resultMap id="BaseResultMap" type="team.smart.model.Repository">
		<id column="ID" property="ID" jdbcType="INTEGER" />
		<result column="REPO_NUM" property="REPO_NUM" jdbcType="VARCHAR" />
		<result column="ADDRESS" property="ADDRESS" jdbcType="VARCHAR" />
		<result column="AREA" property="AREA" jdbcType="DOUBLE" />
		<result column="MANAGER_ID" property="MANAGER_ID" jdbcType="INTEGER" />
		<result column="MANAGER_NAME" property="MANAGER_NAME" jdbcType="VARCHAR" />
		<result column="STATE" property="STATE" jdbcType="TINYINT" />
	</resultMap>
	<sql id="Base_Column_List">
		ID, REPO_NUM, ADDRESS, AREA, MANAGER_ID, MANAGER_NAME, STATE
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from repository
		where ID = #{ID,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from repository
		where ID = #{ID,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="team.smart.model.Repository">
		insert into repository (ID, REPO_NUM, ADDRESS,
		AREA, MANAGER_ID, MANAGER_NAME,
		STATE)
		values (#{ID,jdbcType=INTEGER}, #{REPO_NUM,jdbcType=VARCHAR},
		#{ADDRESS,jdbcType=VARCHAR},
		#{AREA,jdbcType=DOUBLE}, #{MANAGER_ID,jdbcType=INTEGER}, #{MANAGER_NAME,jdbcType=VARCHAR},
		#{STATE,jdbcType=TINYINT})
	</insert>
	<insert id="insertSelective" parameterType="team.smart.model.Repository">
		insert into repository
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="ID != null">
				ID,
			</if>
			<if test="REPO_NUM != null">
				REPO_NUM,
			</if>
			<if test="ADDRESS != null">
				ADDRESS,
			</if>
			<if test="AREA != null">
				AREA,
			</if>
			<if test="MANAGER_ID != null">
				MANAGER_ID,
			</if>
			<if test="MANAGER_NAME != null">
				MANAGER_NAME,
			</if>
			<if test="STATE != null">
				STATE,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="ID != null">
				#{ID,jdbcType=INTEGER},
			</if>
			<if test="REPO_NUM != null">
				#{REPO_NUM,jdbcType=VARCHAR},
			</if>
			<if test="ADDRESS != null">
				#{ADDRESS,jdbcType=VARCHAR},
			</if>
			<if test="AREA != null">
				#{AREA,jdbcType=DOUBLE},
			</if>
			<if test="MANAGER_ID != null">
				#{MANAGER_ID,jdbcType=INTEGER},
			</if>
			<if test="MANAGER_NAME != null">
				#{MANAGER_NAME,jdbcType=VARCHAR},
			</if>
			<if test="STATE != null">
				#{STATE,jdbcType=TINYINT},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="team.smart.model.Repository">
		update repository
		<set>
			<if test="REPO_NUM != null">
				REPO_NUM = #{REPO_NUM,jdbcType=VARCHAR},
			</if>
			<if test="ADDRESS != null">
				ADDRESS = #{ADDRESS,jdbcType=VARCHAR},
			</if>
			<if test="AREA != null">
				AREA = #{AREA,jdbcType=DOUBLE},
			</if>
			<if test="MANAGER_ID != null">
				MANAGER_ID = #{MANAGER_ID,jdbcType=INTEGER},
			</if>
			<if test="MANAGER_NAME != null">
				MANAGER_NAME = #{MANAGER_NAME,jdbcType=VARCHAR},
			</if>
			<if test="STATE != null">
				STATE = #{STATE,jdbcType=TINYINT},
			</if>
		</set>
		where ID = #{ID,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="team.smart.model.Repository">
		update repository
		set REPO_NUM = #{REPO_NUM,jdbcType=VARCHAR},
		ADDRESS = #{ADDRESS,jdbcType=VARCHAR},
		AREA = #{AREA,jdbcType=DOUBLE},
		MANAGER_ID = #{MANAGER_ID,jdbcType=INTEGER},
		MANAGER_NAME = #{MANAGER_NAME,jdbcType=VARCHAR},
		STATE = #{STATE,jdbcType=TINYINT}
		where ID = #{ID,jdbcType=INTEGER}
	</update>
	<select id="selectByRepoNum" resultMap="BaseResultMap"
		parameterType="string">
		select * from repository
		where REPO_NUM = #{repoNum}
	</select>
</mapper>