<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="team.smart.dao.PlanDetailMapper">
	<resultMap id="BaseResultMap" type="team.smart.model.PlanDetail">
		<id column="ID" property="ID" jdbcType="INTEGER" />
		<result column="PLAN_ID" property="PLAN_ID" jdbcType="INTEGER" />
		<result column="FAC_ID" property="FAC_ID" jdbcType="INTEGER" />
		<result column="TYPE" property="TYPE" jdbcType="VARCHAR" />
		<result column="CAT" property="CAT" jdbcType="VARCHAR" />
		<result column="BRAND" property="BRAND" jdbcType="VARCHAR" />
		<result column="NAME" property="NAME" jdbcType="VARCHAR" />
		<result column="OWNER" property="OWNER" jdbcType="VARCHAR" />
		<result column="REPO_ID" property="REPO_ID" jdbcType="INTEGER" />
		<result column="REPO_NUM" property="REPO_NUM" jdbcType="VARCHAR" />
		<result column="TOTAL" property="TOTAL" jdbcType="INTEGER" />
		<result column="ALREADY" property="ALREADY" jdbcType="INTEGER" />
		<result column="UNITPRICE" property="UNITPRICE" jdbcType="DOUBLE" />
		<result column="ALL_MONEY" property="ALL_MONEY" jdbcType="DOUBLE" />
		<result column="PROVIDER" property="PROVIDER" jdbcType="VARCHAR" />
		<result column="INVOICE_TYPE" property="INVOICE_TYPE" jdbcType="VARCHAR" />
		<result column="RECEIVED" property="RECEIVED" jdbcType="VARCHAR" />
		<result column="ORDER_DATE" property="ORDER_DATE" jdbcType="DATE" />
		<result column="ARRIVAL_DATE" property="ARRIVAL_DATE" jdbcType="DATE" />
		<result column="COMMENT" property="COMMENT" jdbcType="VARCHAR" />
		<result column="SYS_STATE" property="SYS_STATE" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		ID, PLAN_ID, FAC_ID, TOTAL, ALREADY, UNITPRICE, ALL_MONEY, PROVIDER,
		INVOICE_TYPE,
		RECEIVED, ORDER_DATE, ARRIVAL_DATE, COMMENT, SYS_STATE
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from plan_detail
		where ID = #{ID,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from plan_detail
		where ID = #{ID,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="team.smart.model.PlanDetail">
		insert into plan_detail (ID, PLAN_ID, FAC_ID,
		TOTAL, ALREADY, UNITPRICE,
		ALL_MONEY, PROVIDER, INVOICE_TYPE,
		RECEIVED, ORDER_DATE, ARRIVAL_DATE,
		COMMENT, SYS_STATE)
		values (#{ID,jdbcType=INTEGER}, #{PLAN_ID,jdbcType=INTEGER},
		#{FAC_ID,jdbcType=INTEGER},
		#{TOTAL,jdbcType=INTEGER}, #{ALREADY,jdbcType=INTEGER}, #{UNITPRICE,jdbcType=DOUBLE},
		#{ALL_MONEY,jdbcType=DOUBLE}, #{PROVIDER,jdbcType=VARCHAR},
		#{INVOICE_TYPE,jdbcType=VARCHAR},
		#{RECEIVED,jdbcType=VARCHAR}, #{ORDER_DATE,jdbcType=DATE}, #{ARRIVAL_DATE,jdbcType=DATE},
		#{COMMENT,jdbcType=VARCHAR}, #{SYS_STATE,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="team.smart.model.PlanDetail">
		insert into plan_detail
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="ID != null">
				ID,
			</if>
			<if test="PLAN_ID != null">
				PLAN_ID,
			</if>
			<if test="FAC_ID != null">
				FAC_ID,
			</if>
			<if test="TOTAL != null">
				TOTAL,
			</if>
			<if test="ALREADY != null">
				ALREADY,
			</if>
			<if test="UNITPRICE != null">
				UNITPRICE,
			</if>
			<if test="ALL_MONEY != null">
				ALL_MONEY,
			</if>
			<if test="PROVIDER != null">
				PROVIDER,
			</if>
			<if test="INVOICE_TYPE != null">
				INVOICE_TYPE,
			</if>
			<if test="RECEIVED != null">
				RECEIVED,
			</if>
			<if test="ORDER_DATE != null">
				ORDER_DATE,
			</if>
			<if test="ARRIVAL_DATE != null">
				ARRIVAL_DATE,
			</if>
			<if test="COMMENT != null">
				COMMENT,
			</if>
			<if test="SYS_STATE != null">
				SYS_STATE,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="ID != null">
				#{ID,jdbcType=INTEGER},
			</if>
			<if test="PLAN_ID != null">
				#{PLAN_ID,jdbcType=INTEGER},
			</if>
			<if test="FAC_ID != null">
				#{FAC_ID,jdbcType=INTEGER},
			</if>
			<if test="TOTAL != null">
				#{TOTAL,jdbcType=INTEGER},
			</if>
			<if test="ALREADY != null">
				#{ALREADY,jdbcType=INTEGER},
			</if>
			<if test="UNITPRICE != null">
				#{UNITPRICE,jdbcType=DOUBLE},
			</if>
			<if test="ALL_MONEY != null">
				#{ALL_MONEY,jdbcType=DOUBLE},
			</if>
			<if test="PROVIDER != null">
				#{PROVIDER,jdbcType=VARCHAR},
			</if>
			<if test="INVOICE_TYPE != null">
				#{INVOICE_TYPE,jdbcType=VARCHAR},
			</if>
			<if test="RECEIVED != null">
				#{RECEIVED,jdbcType=VARCHAR},
			</if>
			<if test="ORDER_DATE != null">
				#{ORDER_DATE,jdbcType=DATE},
			</if>
			<if test="ARRIVAL_DATE != null">
				#{ARRIVAL_DATE,jdbcType=DATE},
			</if>
			<if test="COMMENT != null">
				#{COMMENT,jdbcType=VARCHAR},
			</if>
			<if test="SYS_STATE != null">
				#{SYS_STATE,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="team.smart.model.PlanDetail">
		update plan_detail
		<set>
			<if test="PLAN_ID != null">
				PLAN_ID = #{PLAN_ID,jdbcType=INTEGER},
			</if>
			<if test="FAC_ID != null">
				FAC_ID = #{FAC_ID,jdbcType=INTEGER},
			</if>
			<if test="TOTAL != null">
				TOTAL = #{TOTAL,jdbcType=INTEGER},
			</if>
			<if test="ALREADY != null">
				ALREADY = #{ALREADY,jdbcType=INTEGER},
			</if>
			<if test="UNITPRICE != null">
				UNITPRICE = #{UNITPRICE,jdbcType=DOUBLE},
			</if>
			<if test="ALL_MONEY != null">
				ALL_MONEY = #{ALL_MONEY,jdbcType=DOUBLE},
			</if>
			<if test="PROVIDER != null">
				PROVIDER = #{PROVIDER,jdbcType=VARCHAR},
			</if>
			<if test="INVOICE_TYPE != null">
				INVOICE_TYPE = #{INVOICE_TYPE,jdbcType=VARCHAR},
			</if>
			<if test="RECEIVED != null">
				RECEIVED = #{RECEIVED,jdbcType=VARCHAR},
			</if>
			<if test="ORDER_DATE != null">
				ORDER_DATE = #{ORDER_DATE,jdbcType=DATE},
			</if>
			<if test="ARRIVAL_DATE != null">
				ARRIVAL_DATE = #{ARRIVAL_DATE,jdbcType=DATE},
			</if>
			<if test="COMMENT != null">
				COMMENT = #{COMMENT,jdbcType=VARCHAR},
			</if>
			<if test="SYS_STATE != null">
				SYS_STATE = #{SYS_STATE,jdbcType=INTEGER},
			</if>
		</set>
		where ID = #{ID,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="team.smart.model.PlanDetail">
		update plan_detail
		set PLAN_ID = #{PLAN_ID,jdbcType=INTEGER},
		FAC_ID = #{FAC_ID,jdbcType=INTEGER},
		TOTAL = #{TOTAL,jdbcType=INTEGER},
		ALREADY = #{ALREADY,jdbcType=INTEGER},
		UNITPRICE = #{UNITPRICE,jdbcType=DOUBLE},
		ALL_MONEY = #{ALL_MONEY,jdbcType=DOUBLE},
		PROVIDER = #{PROVIDER,jdbcType=VARCHAR},
		INVOICE_TYPE = #{INVOICE_TYPE,jdbcType=VARCHAR},
		RECEIVED = #{RECEIVED,jdbcType=VARCHAR},
		ORDER_DATE = #{ORDER_DATE,jdbcType=DATE},
		ARRIVAL_DATE = #{ARRIVAL_DATE,jdbcType=DATE},
		COMMENT = #{COMMENT,jdbcType=VARCHAR},
		SYS_STATE = #{SYS_STATE,jdbcType=INTEGER}
		where ID = #{ID,jdbcType=INTEGER}
	</update>
	<select id="getTotalByPlanId" resultType="java.lang.Integer"
		parameterType="java.lang.Integer">
  	<![CDATA[
  	select count(*) from plan_detail where PLAN_ID = #{PID,jdbcType=INTEGER}
    ]]>
	</select>
	<select id="getPlanDetails" resultMap="BaseResultMap"
		parameterType="map">
  	<![CDATA[
  	select plan_detail.ID as ID,
  	       plan_detail.PLAN_ID as PLAN_ID,
  	       plan_detail.FAC_ID as FAC_ID,
  	       fac_sta.TYPE as TYPE,
  	       fac_sta.CAT as CAT,
  	       fac_sta.BRAND as BRAND,
  	       fac_sta.NAME as NAME,
  	       fac_sta.OWNER as OWNER,
  	       fac_sta.REPO_ID as REPO_ID,
  	       fac_sta.REPO_NUM as REPO_NUM,
  	       plan_detail.TOTAL as TOTAL,
  	       plan_detail.ALREADY as ALREADY,
  	       plan_detail.UNITPRICE as UNITPRICE,
  	       plan_detail.ALL_MONEY as ALL_MONEY,
  	       plan_detail.PROVIDER as PROVIDER,
  	       plan_detail.INVOICE_TYPE as INVOICE_TYPE,
  	       plan_detail.RECEIVED as RECEIVED,
  	       plan_detail.ORDER_DATE as ORDER_DATE,
  	       plan_detail.ARRIVAL_DATE as ARRIVAL_DATE,
           plan_detail.COMMENT as COMMENT,
           plan_detail.SYS_STATE as SYS_STATE
  	from plan_detail left join fac_sta on plan_detail.FAC_ID = fac_sta.ID
  	where plan_detail.PLAN_ID = #{PID}
  	order by plan_detail.ID
  	limit #{ST}, #{EACH};
    ]]>
	</select>
</mapper>