<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="team.smart.dao.GroceryRunningMapper">
	<resultMap id="BaseResultMap" type="team.smart.model.GroceryRunning">
		<id column="ID" property="ID" jdbcType="INTEGER" />
		<result column="CTIME" property="CTIME" jdbcType="TIMESTAMP" />
		<result column="ITEM_ID" property="ITEM_ID" jdbcType="INTEGER" />
		<result column="TOTAL" property="TOTAL" jdbcType="INTEGER" />
		<result column="PER_MONEY" property="PER_MONEY" jdbcType="DOUBLE" />
		<result column="ALL_MONEY" property="ALL_MONEY" jdbcType="DOUBLE" />
		<result column="TYPE" property="TYPE" jdbcType="INTEGER" />
		<result column="SYS_STATE" property="SYS_STATE" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		ID, CTIME, ITEM_ID, TOTAL, PER_MONEY, ALL_MONEY, TYPE, SYS_STATE
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from grocery_running
		where ID = #{ID,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from grocery_running
		where ID = #{ID,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="team.smart.model.GroceryRunning">
		insert into grocery_running (ID, CTIME, ITEM_ID,
		TOTAL, PER_MONEY, ALL_MONEY,
		TYPE, SYS_STATE)
		values (#{ID,jdbcType=INTEGER}, #{CTIME,jdbcType=TIMESTAMP},
		#{ITEM_ID,jdbcType=INTEGER},
		#{TOTAL,jdbcType=INTEGER}, #{PER_MONEY,jdbcType=DOUBLE}, #{ALL_MONEY,jdbcType=DOUBLE},
		#{TYPE,jdbcType=INTEGER}, #{SYS_STATE,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="team.smart.model.GroceryRunning">
		insert into grocery_running
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="ID != null">
				ID,
			</if>
			<if test="CTIME != null">
				CTIME,
			</if>
			<if test="ITEM_ID != null">
				ITEM_ID,
			</if>
			<if test="TOTAL != null">
				TOTAL,
			</if>
			<if test="PER_MONEY != null">
				PER_MONEY,
			</if>
			<if test="ALL_MONEY != null">
				ALL_MONEY,
			</if>
			<if test="TYPE != null">
				TYPE,
			</if>
			<if test="SYS_STATE != null">
				SYS_STATE,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="ID != null">
				#{ID,jdbcType=INTEGER},
			</if>
			<if test="CTIME != null">
				#{CTIME,jdbcType=TIMESTAMP},
			</if>
			<if test="ITEM_ID != null">
				#{ITEM_ID,jdbcType=INTEGER},
			</if>
			<if test="TOTAL != null">
				#{TOTAL,jdbcType=INTEGER},
			</if>
			<if test="PER_MONEY != null">
				#{PER_MONEY,jdbcType=DOUBLE},
			</if>
			<if test="ALL_MONEY != null">
				#{ALL_MONEY,jdbcType=DOUBLE},
			</if>
			<if test="TYPE != null">
				#{TYPE,jdbcType=INTEGER},
			</if>
			<if test="SYS_STATE != null">
				#{SYS_STATE,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="team.smart.model.GroceryRunning">
		update grocery_running
		<set>
			<if test="CTIME != null">
				CTIME = #{CTIME,jdbcType=TIMESTAMP},
			</if>
			<if test="ITEM_ID != null">
				ITEM_ID = #{ITEM_ID,jdbcType=INTEGER},
			</if>
			<if test="TOTAL != null">
				TOTAL = #{TOTAL,jdbcType=INTEGER},
			</if>
			<if test="PER_MONEY != null">
				PER_MONEY = #{PER_MONEY,jdbcType=DOUBLE},
			</if>
			<if test="ALL_MONEY != null">
				ALL_MONEY = #{ALL_MONEY,jdbcType=DOUBLE},
			</if>
			<if test="TYPE != null">
				TYPE = #{TYPE,jdbcType=INTEGER},
			</if>
			<if test="SYS_STATE != null">
				SYS_STATE = #{SYS_STATE,jdbcType=INTEGER},
			</if>
		</set>
		where ID = #{ID,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="team.smart.model.GroceryRunning">
		update grocery_running
		set CTIME = #{CTIME,jdbcType=TIMESTAMP},
		ITEM_ID = #{ITEM_ID,jdbcType=INTEGER},
		TOTAL = #{TOTAL,jdbcType=INTEGER},
		PER_MONEY = #{PER_MONEY,jdbcType=DOUBLE},
		ALL_MONEY = #{ALL_MONEY,jdbcType=DOUBLE},
		TYPE = #{TYPE,jdbcType=INTEGER},
		SYS_STATE = #{SYS_STATE,jdbcType=INTEGER}
		where ID = #{ID,jdbcType=INTEGER}
	</update>
	<select id="totalRec" resultType="java.lang.Integer"
		parameterType="map">
		select count(*) from grocery_running
		<if test="ID != null">
			where ITEM_ID = #{ID} and CTIME &lt;= #{TTIME} and CTIME >= #{FTIME}
		</if>
	</select>
	<select id="getRec" resultMap="BaseResultMap" parameterType="map">
		select * from grocery_running
		<if test="ID != null">
			where ITEM_ID = #{ID} and CTIME &lt;= #{TTIME} and CTIME >= #{FTIME}
		</if>
		limit #{ST}, #{EACH}
	</select>
</mapper>