<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="team.smart.dao.MealMapper">
	<resultMap id="BaseResultMap" type="team.smart.model.Meal">
		<id column="ID" property="ID" jdbcType="INTEGER" />
		<result column="ROOM_NUM" property="ROOM_NUM" jdbcType="VARCHAR" />
		<result column="GUEST_ID" property="GUEST_ID" jdbcType="INTEGER" />
		<result column="GUEST_NAME" property="GUEST_NAME" jdbcType="VARCHAR" />
		<result column="RESTAURANT_NAME" property="RESTAURANT_NAME"
			jdbcType="VARCHAR" />
		<result column="TOTAL_PRICE" property="TOTAL_PRICE" jdbcType="DOUBLE" />
		<result column="PAY_MODE" property="PAY_MODE" jdbcType="TINYINT" />
		<result column="COMMENT" property="COMMENT" jdbcType="VARCHAR" />
		<result column="STAFF_ID" property="STAFF_ID" jdbcType="INTEGER" />
		<result column="STAFF_NAME" property="STAFF_NAME" jdbcType="VARCHAR" />
		<result column="OCCUR_TIME" property="OCCUR_TIME" jdbcType="TIMESTAMP" />
		<result column="IMPORT_TIME" property="IMPORT_TIME" jdbcType="TIMESTAMP" />
		<result column="EDIT_TIME" property="EDIT_TIME" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		ID, ROOM_NUM, GUEST_ID, GUEST_NAME, RESTAURANT_NAME, TOTAL_PRICE,
		PAY_MODE, COMMENT,
		STAFF_ID, STAFF_NAME, OCCUR_TIME, IMPORT_TIME, EDIT_TIME
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from meal
		where ID = #{ID,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from meal
		where ID = #{ID,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="team.smart.model.Meal">
		insert into meal (ID, ROOM_NUM, GUEST_ID,
		GUEST_NAME, RESTAURANT_NAME, TOTAL_PRICE,
		PAY_MODE, COMMENT, STAFF_ID,
		STAFF_NAME, OCCUR_TIME, IMPORT_TIME,
		EDIT_TIME)
		values (#{ID,jdbcType=INTEGER}, #{ROOM_NUM,jdbcType=VARCHAR},
		#{GUEST_ID,jdbcType=INTEGER},
		#{GUEST_NAME,jdbcType=VARCHAR}, #{RESTAURANT_NAME,jdbcType=VARCHAR}, #{TOTAL_PRICE,jdbcType=DOUBLE},
		#{PAY_MODE,jdbcType=TINYINT}, #{COMMENT,jdbcType=VARCHAR},
		#{STAFF_ID,jdbcType=INTEGER},
		#{STAFF_NAME,jdbcType=VARCHAR}, #{OCCUR_TIME,jdbcType=TIMESTAMP}, #{IMPORT_TIME,jdbcType=TIMESTAMP},
		#{EDIT_TIME,jdbcType=TIMESTAMP})
	</insert>
	<insert id="insertSelective" parameterType="team.smart.model.Meal">
		insert into meal
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="ID != null">
				ID,
			</if>
			<if test="ROOM_NUM != null">
				ROOM_NUM,
			</if>
			<if test="GUEST_ID != null">
				GUEST_ID,
			</if>
			<if test="GUEST_NAME != null">
				GUEST_NAME,
			</if>
			<if test="RESTAURANT_NAME != null">
				RESTAURANT_NAME,
			</if>
			<if test="TOTAL_PRICE != null">
				TOTAL_PRICE,
			</if>
			<if test="PAY_MODE != null">
				PAY_MODE,
			</if>
			<if test="COMMENT != null">
				COMMENT,
			</if>
			<if test="STAFF_ID != null">
				STAFF_ID,
			</if>
			<if test="STAFF_NAME != null">
				STAFF_NAME,
			</if>
			<if test="OCCUR_TIME != null">
				OCCUR_TIME,
			</if>
			<if test="IMPORT_TIME != null">
				IMPORT_TIME,
			</if>
			<if test="EDIT_TIME != null">
				EDIT_TIME,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="ID != null">
				#{ID,jdbcType=INTEGER},
			</if>
			<if test="ROOM_NUM != null">
				#{ROOM_NUM,jdbcType=VARCHAR},
			</if>
			<if test="GUEST_ID != null">
				#{GUEST_ID,jdbcType=INTEGER},
			</if>
			<if test="GUEST_NAME != null">
				#{GUEST_NAME,jdbcType=VARCHAR},
			</if>
			<if test="RESTAURANT_NAME != null">
				#{RESTAURANT_NAME,jdbcType=VARCHAR},
			</if>
			<if test="TOTAL_PRICE != null">
				#{TOTAL_PRICE,jdbcType=DOUBLE},
			</if>
			<if test="PAY_MODE != null">
				#{PAY_MODE,jdbcType=TINYINT},
			</if>
			<if test="COMMENT != null">
				#{COMMENT,jdbcType=VARCHAR},
			</if>
			<if test="STAFF_ID != null">
				#{STAFF_ID,jdbcType=INTEGER},
			</if>
			<if test="STAFF_NAME != null">
				#{STAFF_NAME,jdbcType=VARCHAR},
			</if>
			<if test="OCCUR_TIME != null">
				#{OCCUR_TIME,jdbcType=TIMESTAMP},
			</if>
			<if test="IMPORT_TIME != null">
				#{IMPORT_TIME,jdbcType=TIMESTAMP},
			</if>
			<if test="EDIT_TIME != null">
				#{EDIT_TIME,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="team.smart.model.Meal">
		update meal
		<set>
			<if test="ROOM_NUM != null">
				ROOM_NUM = #{ROOM_NUM,jdbcType=VARCHAR},
			</if>
			<if test="GUEST_ID != null">
				GUEST_ID = #{GUEST_ID,jdbcType=INTEGER},
			</if>
			<if test="GUEST_NAME != null">
				GUEST_NAME = #{GUEST_NAME,jdbcType=VARCHAR},
			</if>
			<if test="RESTAURANT_NAME != null">
				RESTAURANT_NAME = #{RESTAURANT_NAME,jdbcType=VARCHAR},
			</if>
			<if test="TOTAL_PRICE != null">
				TOTAL_PRICE = #{TOTAL_PRICE,jdbcType=DOUBLE},
			</if>
			<if test="PAY_MODE != null">
				PAY_MODE = #{PAY_MODE,jdbcType=TINYINT},
			</if>
			<if test="COMMENT != null">
				COMMENT = #{COMMENT,jdbcType=VARCHAR},
			</if>
			<if test="STAFF_ID != null">
				STAFF_ID = #{STAFF_ID,jdbcType=INTEGER},
			</if>
			<if test="STAFF_NAME != null">
				STAFF_NAME = #{STAFF_NAME,jdbcType=VARCHAR},
			</if>
			<if test="OCCUR_TIME != null">
				OCCUR_TIME = #{OCCUR_TIME,jdbcType=TIMESTAMP},
			</if>
			<if test="IMPORT_TIME != null">
				IMPORT_TIME = #{IMPORT_TIME,jdbcType=TIMESTAMP},
			</if>
			<if test="EDIT_TIME != null">
				EDIT_TIME = #{EDIT_TIME,jdbcType=TIMESTAMP},
			</if>
		</set>
		where ID = #{ID,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="team.smart.model.Meal">
		update meal
		set ROOM_NUM = #{ROOM_NUM,jdbcType=VARCHAR},
		GUEST_ID = #{GUEST_ID,jdbcType=INTEGER},
		GUEST_NAME = #{GUEST_NAME,jdbcType=VARCHAR},
		RESTAURANT_NAME = #{RESTAURANT_NAME,jdbcType=VARCHAR},
		TOTAL_PRICE = #{TOTAL_PRICE,jdbcType=DOUBLE},
		PAY_MODE = #{PAY_MODE,jdbcType=TINYINT},
		COMMENT = #{COMMENT,jdbcType=VARCHAR},
		STAFF_ID = #{STAFF_ID,jdbcType=INTEGER},
		STAFF_NAME = #{STAFF_NAME,jdbcType=VARCHAR},
		OCCUR_TIME = #{OCCUR_TIME,jdbcType=TIMESTAMP},
		IMPORT_TIME = #{IMPORT_TIME,jdbcType=TIMESTAMP},
		EDIT_TIME = #{EDIT_TIME,jdbcType=TIMESTAMP}
		where ID = #{ID,jdbcType=INTEGER}
	</update>

	<select id="getTotalRow" resultType="java.lang.Integer"
		parameterType="map">
		select count(*) from meal where ROOM_NUM like CONCAT('%', #{RN}, '%')
		<if test="STARTDATE != null">
			and OCCUR_TIME >= #{STARTDATE} and OCCUR_TIME &lt;= #{ENDDATE}
		</if>
	</select>
	<select id="getMealRange" resultMap="BaseResultMap"
		parameterType="map">
		select * from meal where ROOM_NUM like CONCAT('%', #{RN}, '%')
		<if test="STARTDATE != null">
			and OCCUR_TIME >= #{STARTDATE} and OCCUR_TIME &lt;= #{ENDDATE}
		</if>
		order by ID
		limit #{ST}, #{EACH}
	</select>
	<select id="getAll" parameterType="map" resultMap="BaseResultMap">
		select * from meal where ROOM_NUM like CONCAT('%', #{RN}, '%')
		<if test="STARTDATE != null">
			and OCCUR_TIME >= #{STARTDATE} and OCCUR_TIME &lt;= #{ENDDATE}
		</if>
	</select>
</mapper>