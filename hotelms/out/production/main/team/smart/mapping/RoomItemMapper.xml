<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="team.smart.dao.RoomItemMapper" >
  <resultMap id="BaseResultMap" type="team.smart.model.RoomItem" >
    <id column="ID" property="ID" jdbcType="INTEGER" />
    <result column="ROOM_ID" property="ROOM_ID" jdbcType="INTEGER" />
    <result column="ITEM_ID" property="ITEM_ID" jdbcType="INTEGER" />
    <result column="TYPE" property="TYPE" jdbcType="VARCHAR" />
    <result column="TAG" property="TAG" jdbcType="VARCHAR" />
    <result column="COMM" property="COMM" jdbcType="VARCHAR" />
    <result column="STATE" property="STATE" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, ROOM_ID, ITEM_ID, TYPE, TAG, COMM, STATE
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from room_item
    where ID = #{ID,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from room_item
    where ID = #{ID,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="team.smart.model.RoomItem" >
    insert into room_item (ID, ROOM_ID, ITEM_ID, 
      TYPE, TAG, COMM, STATE
      )
    values (#{ID,jdbcType=INTEGER}, #{ROOM_ID,jdbcType=INTEGER}, #{ITEM_ID,jdbcType=INTEGER}, 
      #{TYPE,jdbcType=VARCHAR}, #{TAG,jdbcType=VARCHAR}, #{COMM,jdbcType=VARCHAR}, #{STATE,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="team.smart.model.RoomItem" >
    insert into room_item
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="ID != null" >
        ID,
      </if>
      <if test="ROOM_ID != null" >
        ROOM_ID,
      </if>
      <if test="ITEM_ID != null" >
        ITEM_ID,
      </if>
      <if test="TYPE != null" >
        TYPE,
      </if>
      <if test="TAG != null" >
        TAG,
      </if>
      <if test="COMM != null" >
        COMM,
      </if>
      <if test="STATE != null" >
        STATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="ID != null" >
        #{ID,jdbcType=INTEGER},
      </if>
      <if test="ROOM_ID != null" >
        #{ROOM_ID,jdbcType=INTEGER},
      </if>
      <if test="ITEM_ID != null" >
        #{ITEM_ID,jdbcType=INTEGER},
      </if>
      <if test="TYPE != null" >
        #{TYPE,jdbcType=VARCHAR},
      </if>
      <if test="TAG != null" >
        #{TAG,jdbcType=VARCHAR},
      </if>
      <if test="COMM != null" >
        #{COMM,jdbcType=VARCHAR},
      </if>
      <if test="STATE != null" >
        #{STATE,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="team.smart.model.RoomItem" >
    update room_item
    <set >
      <if test="ROOM_ID != null" >
        ROOM_ID = #{ROOM_ID,jdbcType=INTEGER},
      </if>
      <if test="ITEM_ID != null" >
        ITEM_ID = #{ITEM_ID,jdbcType=INTEGER},
      </if>
      <if test="TYPE != null" >
        TYPE = #{TYPE,jdbcType=VARCHAR},
      </if>
      <if test="TAG != null" >
        TAG = #{TAG,jdbcType=VARCHAR},
      </if>
      <if test="COMM != null" >
        COMM = #{COMM,jdbcType=VARCHAR},
      </if>
      <if test="STATE != null" >
        STATE = #{STATE,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{ID,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="team.smart.model.RoomItem" >
    update room_item
    set ROOM_ID = #{ROOM_ID,jdbcType=INTEGER},
      ITEM_ID = #{ITEM_ID,jdbcType=INTEGER},
      TYPE = #{TYPE,jdbcType=VARCHAR},
      TAG = #{TAG,jdbcType=VARCHAR},
      COMM = #{COMM,jdbcType=VARCHAR},
      STATE = #{STATE,jdbcType=INTEGER}
    where ID = #{ID,jdbcType=INTEGER}
  </update>
  <select id="getItems" resultMap="BaseResultMap" parameterType="map">
  	<![CDATA[
  	select * from room_item where ROOM_ID = #{ROOM_ID} and TYPE = #{TYPE} limit #{ST}, #{EACH}
    ]]>
	</select>
	<select id="getItemsByType" resultMap="BaseResultMap" parameterType="map">
  	<![CDATA[
  	select * from room_item where TYPE = #{TYPE} limit #{ST}, #{EACH}
    ]]>
	</select>
	<select id="getItemsByRoom" resultMap="BaseResultMap" parameterType="map">
  	<![CDATA[
  	select * from room_item where ROOM_ID = #{ROOM_ID} limit #{ST}, #{EACH}
    ]]>
	</select>
	<select id="getItemsByItemID" resultMap="BaseResultMap" parameterType="map">
  	<![CDATA[
  	select room_item.ID, room_item.ROOM_ID, room_item.ITEM_ID, room_item.TYPE, room_item.TAG, room_item.COMM, room_item.STATE,
  	 room.ROOM_NUMBER from room_item left join room on room_item.ROOM_ID = room.ID
  	  where ITEM_ID = #{ITEM_ID} limit #{ST}, #{EACH}
    ]]>
	</select>
	<select id="getAllItems" resultMap="BaseResultMap" parameterType="map">
  	<![CDATA[
  	select * from room_item limit #{ST}, #{EACH}
    ]]>
	</select>
	<select id="getTotal" resultType="java.lang.Integer" parameterType="map">
  	<![CDATA[
  	select count(*) from room_item where ROOM_ID = #{ROOM_ID} and TYPE = #{TYPE}
    ]]>
	</select>
	<select id="getTotalByType" resultType="java.lang.Integer" parameterType="java.lang.String">
  	<![CDATA[
  	select count(*) from room_item where TYPE = #{TYPE,jdbcType=VARCHAR}
    ]]>
	</select>
	<select id="getTotalByRoom" resultType="java.lang.Integer" parameterType="java.lang.Integer">
  	<![CDATA[
  	select count(*) from room_item where ROOM_ID = #{RID,jdbcType=INTEGER}
    ]]>
	</select>
	<select id="getAllTotal" resultType="java.lang.Integer">
  	<![CDATA[
  	select count(*) from room_item
    ]]>
	</select>
	<select id="getTotalByItemID" resultType="java.lang.Integer">
  	<![CDATA[
  	select count(*) from room_item where ITEM_ID = #{ITEM_ID,jdbcType=INTEGER}
    ]]>
	</select>
</mapper>